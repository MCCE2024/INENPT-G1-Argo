name: Infrastructure Deployment

on:
  push:
    branches: [main]
    paths:
      - "infrastructure/**"
  pull_request:
    branches: [main]
    paths:
      - "infrastructure/**"

env:
  TF_VERSION: "1.6.0"

jobs:
  validate:
    name: Validate OpenTofu Configuration
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TF_VERSION }}

      - name: OpenTofu Format Check
        run: tofu fmt -check -recursive
        working-directory: ./infrastructure

      - name: OpenTofu Init
        run: tofu init
        working-directory: ./infrastructure

      - name: OpenTofu Validate
        run: tofu validate
        working-directory: ./infrastructure

      - name: OpenTofu Plan
        run: tofu plan -out=tfplan
        working-directory: ./infrastructure
        env:
          EXOSCALE_API_KEY: ${{ secrets.EXOSCALE_API_KEY }}
          EXOSCALE_API_SECRET: ${{ secrets.EXOSCALE_API_SECRET }}
          EXOSCALE_ZONE: ${{ secrets.EXOSCALE_ZONE }}
          GITHUB_OAUTH_CLIENT_ID: ${{ secrets.GITHUB_OAUTH_CLIENT_ID }}
          GITHUB_OAUTH_CLIENT_SECRET: ${{ secrets.GITHUB_OAUTH_CLIENT_SECRET }}
          ARGOCD_REPO_URL: ${{ secrets.ARGOCD_REPO_URL }}
          ARGOCD_REPO_USERNAME: ${{ secrets.ARGOCD_REPO_USERNAME }}
          ARGOCD_REPO_PASSWORD: ${{ secrets.ARGOCD_REPO_PASSWORD }}

  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TF_VERSION }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: "latest"

      - name: OpenTofu Init
        run: tofu init
        working-directory: ./infrastructure

      - name: OpenTofu Apply
        run: tofu apply -auto-approve
        working-directory: ./infrastructure
        env:
          EXOSCALE_API_KEY: ${{ secrets.EXOSCALE_API_KEY }}
          EXOSCALE_API_SECRET: ${{ secrets.EXOSCALE_API_SECRET }}
          EXOSCALE_ZONE: ${{ secrets.EXOSCALE_ZONE }}
          GITHUB_OAUTH_CLIENT_ID: ${{ secrets.GITHUB_OAUTH_CLIENT_ID }}
          GITHUB_OAUTH_CLIENT_SECRET: ${{ secrets.GITHUB_OAUTH_CLIENT_SECRET }}
          ARGOCD_REPO_URL: ${{ secrets.ARGOCD_REPO_URL }}
          ARGOCD_REPO_USERNAME: ${{ secrets.ARGOCD_REPO_USERNAME }}
          ARGOCD_REPO_PASSWORD: ${{ secrets.ARGOCD_REPO_PASSWORD }}

      - name: Get kubeconfig
        run: |
          tofu output -raw kubeconfig > kubeconfig.yaml
        working-directory: ./infrastructure

      - name: Verify ArgoCD Deployment
        run: |
          export KUBECONFIG=kubeconfig.yaml
          kubectl wait --for=condition=available --timeout=300s deployment/argocd-server -n argocd
          kubectl get pods -n argocd
